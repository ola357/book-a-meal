{"version":3,"sources":["orders.js"],"names":["express","require","validateGenre","router","Router","orders","id","name","get","req","res","send","post","body","error","status","details","message","order","length","push","put","find","c","parseInt","params","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;;eAC0BA,QAAQ,6BAAR,C;IAAlBC,a,YAAAA,a;;AAER,IAAMC,SAASH,QAAQI,MAAR,EAAf;;AAEA,IAAMC,SAAS,CACb,EAAEC,IAAI,CAAN,EAASC,MAAM,aAAf,EADa,EAEb,EAAED,IAAI,CAAN,EAASC,MAAM,YAAf,EAFa,EAGb,EAAED,IAAI,CAAN,EAASC,MAAM,gBAAf,EAHa,CAAf;;AAMAJ,OAAOK,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BA,MAAIC,IAAJ,CAASN,MAAT;AACD,CAFD;;AAIAF,OAAOS,IAAP,CAAY,GAAZ,EAAiB,UAACH,GAAD,EAAMC,GAAN,EAAc;AAAA,uBACXR,cAAcO,IAAII,IAAlB,CADW;AAAA,MACrBC,KADqB,kBACrBA,KADqB;;AAE7B,MAAIA,KAAJ,EAAW,OAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqBG,MAAME,OAAN,CAAc,CAAd,EAAiBC,OAAtC,CAAP;;AAEX,MAAMC,QAAQ;AACZZ,QAAID,OAAOc,MAAP,GAAgB,CADR;AAEZZ,UAAME,IAAII,IAAJ,CAASN;AAFH,GAAd;AAIAF,SAAOe,IAAP,CAAYF,KAAZ;AACAR,MAAIC,IAAJ,CAASO,KAAT;AACD,CAVD;;AAYAf,OAAOkB,GAAP,CAAW,MAAX,EAAmB,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAC/B,MAAMQ,QAAQb,OAAOiB,IAAP,CAAY;AAAA,WAAKC,EAAEjB,EAAF,KAASkB,SAASf,IAAIgB,MAAJ,CAAWnB,EAApB,EAAwB,EAAxB,CAAd;AAAA,GAAZ,CAAd;AACA,MAAI,CAACY,KAAL,EAAY,OAAOR,IAAIK,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB,4CAArB,CAAP;;AAFmB,wBAIbT,cAAcO,IAAII,IAAlB,CAJa;AAAA,MAIvBC,KAJuB,mBAIvBA,KAJuB;;AAK/B,MAAIA,KAAJ,EAAW,OAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqBG,MAAME,OAAN,CAAc,CAAd,EAAiBC,OAAtC,CAAP;;AAEXC,QAAMX,IAAN,GAAaE,IAAII,IAAJ,CAASN,IAAtB;AACAG,MAAIC,IAAJ,CAASO,KAAT;AACD,CATD;;AAWAQ,OAAOC,OAAP,GAAiBxB,MAAjB","file":"orders.js","sourceRoot":"C:/Users/user 168/Documents/Code/book-a-meal/server/routes","sourcesContent":["const express = require('express');\nconst { validateGenre } = require(\"../middleware/validateGenre\");\n\nconst router = express.Router();\n\nconst orders = [\n  { id: 1, name: 'Jollof rice' },\n  { id: 2, name: 'Fried rice' },\n  { id: 3, name: 'Semo and Egusi' },\n];\n\nrouter.get('/', (req, res) => {\n  res.send(orders);\n});\n\nrouter.post('/', (req, res) => {\n  const { error } = validateGenre(req.body);\n  if (error) return res.status(400).send(error.details[0].message);\n\n  const order = {\n    id: orders.length + 1,\n    name: req.body.name,\n  };\n  orders.push(order);\n  res.send(order);\n});\n\nrouter.put('/:id', (req, res) => {\n  const order = orders.find(c => c.id === parseInt(req.params.id, 10));\n  if (!order) return res.status(404).send('The order with the given ID was not found.');\n\n  const { error } = validateGenre(req.body);\n  if (error) return res.status(400).send(error.details[0].message);\n\n  order.name = req.body.name;\n  res.send(order);\n});\n\nmodule.exports = router;\n"]}